on:
  push:
    branches: [master, main]
    tags: ['v*']
  pull_request:
    branches: [master, main]

name: Continuous Integration and Deployment

jobs:
  test-nocache:
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: false
    - run: go test ./...

  test-cache:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: 1.21.x
    - run: go test ./...

  build:
    runs-on: ubuntu-latest
    needs: [test-nocache, test-cache]
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x
        
    - name: Get version
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        fi
        
    - name: Build binaries
      run: |
        mkdir -p dist
        
        # Build cho các platform khác nhau
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/app-linux-amd64 .
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/app-linux-arm64 .
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/app-windows-amd64.exe .
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/app-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/app-darwin-arm64 .
        
    - name: Create archives
      run: |
        cd dist
        tar -czf app-linux-amd64.tar.gz app-linux-amd64
        tar -czf app-linux-arm64.tar.gz app-linux-arm64
        zip app-windows-amd64.zip app-windows-amd64.exe
        tar -czf app-darwin-amd64.tar.gz app-darwin-amd64
        tar -czf app-darwin-arm64.tar.gz app-darwin-arm64
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: dist/*.{tar.gz,zip}



  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: binaries
        path: dist/
        
    - name: Generate changelog
      id: changelog
      run: |
        # Tạo changelog đơn giản từ commit messages
        if git describe --tags --abbrev=0 HEAD^ >/dev/null 2>&1; then
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          echo "## Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          git log ${PREV_TAG}..HEAD --oneline --pretty=format:"- %s" >> CHANGELOG.md
        else
          echo "## Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "- Initial release" >> CHANGELOG.md
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.tar.gz
          dist/*.zip
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}